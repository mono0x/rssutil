#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require 'thor'

module RSSUtil
  class CLI < Thor

    desc 'disable_rss', 'disable RSS'
    def disable_rss(nic)
      interrupt_numbers(nic).each do |irq|
        open("/proc/irq/#{irq}/smp_affinity", 'w') do |f|
          f << '%x' % ((1 << number_of_processors) - 1)
        end
      end
    end

    desc 'enable_rss', 'enable RSS'
    def enable_rss(nic, assignment = "0-#{number_of_processors - 1}")
      cpus = assignment.split(',').map {|section|
        section.match(/\A(?<from>\d+)(?:-(?<to>\d+))?\z/) {|m|
          m[:to] ? (Integer(m[:from])..Integer(m[:to])).to_a : [ Integer(m[:from]) ]
        }
      }.inject(&:+)
      irqs = interrupt_numbers(nic)
      (cpus * ((irqs.size * 2 - 1) / cpus.size)).zip(irqs).select {|cpu, irq| cpu && irq }.each do |cpu, irq|
        open("/proc/irq/#{irq}/smp_affinity", 'w') do |f|
          f << '%x' % (1 << cpu)
        end
      end
    end

    desc 'show_affinity', 'show affinity masks'
    def show_affinity(nic)
      interrupt_numbers(nic).each do |irq|
        puts "#{irq}: #{open("/proc/irq/#{irq}/smp_affinity").read}"
      end
    end

    private

    def number_of_processors
      open('/proc/cpuinfo').read.lines.select {|l| l =~ /^processor\s+:/ }.size
    end

    def interrupt_numbers(nic)
      open('/proc/interrupts').read.each_line.map {|l|
        l.match(/^\s*(?<irq>\d+).+#{nic}-/) {|m| Integer(m[:irq]) }
      }.compact
    end

  end
end

RSSUtil::CLI.start

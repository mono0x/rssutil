#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require 'thor'

module RSSUtil
  class CLI < Thor

    desc 'disable_rss', 'disable RSS'
    def disable_rss(nic)
      interrupt_numbers(nic).each do |irq|
        open("/proc/irq/#{irq}/smp_affinity", 'w') do |f|
          f << 'ff'
        end
      end
    end

    desc 'enable_rss', 'enable RSS'
    def enable_rss(nic, from = 0, to = number_of_processors - 1)
      cpus = (from...to).to_a
      irqs = interrupt_numbers(nic)
      (cpus * ((irqs.size * 2 - 1) / cpus.size)).zip(irqs).select {|cpu, irq| cpu && irq }.each do |cpu, irq|
        p cpu, irq
        open("/proc/irq/#{irq}/smp_affinity", 'w') do |f|
          f << '%x' % (1 << cpu)
        end
      end
    end

    desc 'show_affinity', 'show affinity masks'
    def show_affinity(nic)
      interrupt_numbers(nic).each do |irq|
        puts "#{irq}: #{open("/proc/irq/#{irq}/smp_affinity").read}"
      end
    end

    private

    def number_of_processors
      open('/proc/cpuinfo').read.lines.select {|l| l =~ /^processor\s+:/ }.size
    end

    def interrupt_numbers(nic)
      # Dir.entries('...') => [ '.', '..', ... ]
      Dir.entries("/sys/class/net/#{nic}/device/msi_irqs").drop(2).map(&:to_i).sort
    end

  end
end

RSSUtil::CLI.start
